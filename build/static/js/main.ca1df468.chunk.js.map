{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","helpers/helpers.js","components/Popup.js","components/Notification.js","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","key","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","showNotification","setter","setTimeout","checkWin","correct","wrong","word","time","status","console","log","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","useEffect","style","display","onClick","Notification","wordList","english","french","selectedLanguage","Math","floor","random","App","useState","playable","setCorrectLetters","setWrongLetters","setShowNotification","timeRemaining","setTimeRemaining","score","setScore","roundScores","setRoundScores","handleKeydown","event","keyCode","toLowerCase","show","prevScore","currentLetters","countdown","setInterval","prevTime","clearInterval","window","addEventListener","removeEventListener","htmlFor","id","onChange","target","value","updateScore","prevRoundScores","roundScore","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca1df468.chunk.js","sourcesContent":["import React from 'react'\n\n// rafce\nconst Header = () => {\n  return (\n    <>\n      <h1>Hangman</h1>\n      <p>Find the hidden word - Enter a letter</p>\n    </>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Figure = ({ wrongLetters }) => {\n  const errors = wrongLetters.length\n\n  return (\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\n      {/* <!-- Rod --> */}\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\n\n      {/* <!-- Head --> */}\n      {errors > 0 &&\n        <circle cx=\"140\" cy=\"70\" r=\"20\" />\n      }\n      {/* <!-- Body --> */}\n      {errors > 1 &&\n        <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />\n      }\n      {/* <!-- Arms --> */}\n      {errors > 2 &&\n        <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />\n      }\n      {errors > 3 &&\n        <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />\n      }\n      {/* <!-- Legs --> */}\n      {errors > 4 &&\n        <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />\n      }\n      {errors > 5 &&\n        <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />\n      }\n    </svg>\n  )\n}\n\nexport default Figure\n","import React from 'react'\n\nconst WrongLetters = ({ wrongLetters }) => {\n\n  return (\n    <div className=\"wrong-letters-container\">\n      <div>\n        {wrongLetters.length > 0 && \n          <p>Wrong</p>\n        }\n        {wrongLetters\n          .map((letter, i) => <span key={i}>{letter}</span>)\n          .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\n      </div>\n    </div>\n  )\n}\n\nexport default WrongLetters\n","import React from 'react';\n\nconst Word = ({ selectedWord, correctLetters }) => {\n\n  return (\n    <div className=\"word\">\n      {selectedWord.split('').map((letter, i) => {\n        return (\n          <span className=\"letter\" key={i}>\n            {correctLetters.includes(letter) ? letter : ''}\n            \n          </span>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Word\n","export function showNotification(setter) {\n  setter(true);\n  setTimeout(() => {\n    setter(false);\n  }, 2000);\n}\n\nexport function checkWin(correct, wrong, word,time) {\n  let status = 'win';\n  console.log(\"time is \",time)\n  // Check for win\n  word.split('').forEach(letter => {\n    if(!correct.includes(letter)){\n      status = '';\n    }\n  });\n  \n  // Check for lose\n  if(wrong.length === 6) status = 'lose';\n\n  if(time === 0) status = 'timeup';\n\n  return status\n}","import React, { useEffect } from 'react';\nimport { checkWin } from '../helpers/helpers';\n\nconst Popup = ({ correctLetters, wrongLetters, selectedWord, setPlayable, playAgain,time }) => {\n  let finalMessage = '';\n  let finalMessageRevealWord = '';\n  \n\n  if (checkWin(correctLetters, wrongLetters, selectedWord,time) === 'win') {\n    finalMessage = 'Congratulations! You won! ðŸ˜ƒ';\n  }\n  else if (checkWin(correctLetters, wrongLetters, selectedWord,time) === 'lose') {\n    finalMessage = 'Unfortunately, you lost. ðŸ˜•';\n    finalMessageRevealWord = `...the word was: ${selectedWord}`;\n  }\n\n  else if (checkWin(correctLetters, wrongLetters, selectedWord,time) === 'timeup') {\n    finalMessage = 'Unfortunately, Time is Up. ðŸ˜•';\n    finalMessageRevealWord = `...the word was: ${selectedWord}`;\n  }\n\n  useEffect(() => {\n    if (finalMessage !== '') {\n      setPlayable(false);\n    }\n  }, [finalMessage, setPlayable]);\n\n  return (\n    <div className=\"popup-container\" style={finalMessage !== '' ? { display: 'flex' } : {}}>\n      <div className=\"popup\">\n        <h2>{finalMessage}</h2>\n        <h3>{finalMessageRevealWord}</h3>\n        {finalMessage !== '' && (\n          <button onClick={playAgain}>Play Again</button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import React from 'react'\n\nconst Notification = ({ showNotification }) => {\n  return (\n    <div className={`notification-container ${showNotification ? 'show' : ''}`}>\n      <p>You have already entered this letter</p>\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Popup from './components/Popup';\nimport Notification from './components/Notification';\nimport { showNotification as show, checkWin } from './helpers/helpers';\n\nimport './App.css';\n\nconst wordList = {\n  english: ['application', 'programming', 'interface', 'wizard'],\n  french: ['ordinateur', 'programmation', 'interface', 'sorcier'],\n};\n\nlet selectedLanguage = 'english';\nlet selectedWord = wordList[selectedLanguage][Math.floor(Math.random() * wordList[selectedLanguage].length)];\nconst gameDuration = 30; // Duration of the game in seconds\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState(gameDuration);\n  const [score, setScore] = useState(0);\n  const [roundScores, setRoundScores] = useState([]);\n\n  useEffect(() => {\n    const handleKeydown = event => {\n      const { key, keyCode } = event;\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setScore(prevScore => prevScore + 1); // Increment the score by 1 for correct guesses\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setScore(prevScore => prevScore - 1); // Decrement the score by 1 for wrong guesses\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    const countdown = setInterval(() => {\n      if (timeRemaining > 0 && playable) {\n        setTimeRemaining(prevTime => prevTime - 1);\n      } else {\n        setPlayable(false);\n        clearInterval(countdown);\n      }\n    }, 1000);\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      clearInterval(countdown);\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [correctLetters, wrongLetters, playable, timeRemaining]);\n\n  useEffect(() => {\n    if (timeRemaining === 0) {\n      setPlayable(false);\n    }\n  }, [timeRemaining]);\n\n  function handleLanguageChange(event) {\n    selectedLanguage = event.target.value;\n    selectedWord = wordList[selectedLanguage][Math.floor(Math.random() * wordList[selectedLanguage].length)];\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    setScore(0);\n  }\n\n  function updateScore() {\n    setScore(prevScore => prevScore + 1);\n  }\n\n  function playAgain() {\n    setPlayable(true);\n    setTimeRemaining(gameDuration);\n\n    // Empty Arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    setRoundScores(prevRoundScores => [...prevRoundScores, score]); // Store the current score in roundScores\n    setScore(0);\n\n    selectedWord = wordList[selectedLanguage][Math.floor(Math.random() * wordList[selectedLanguage].length)];\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"language-select\">\n        <label htmlFor=\"language\">Select Language: </label>\n        <select id=\"language\" onChange={handleLanguageChange}>\n          <option value=\"english\">English</option>\n          <option value=\"french\">French</option>\n        </select>\n      </div>\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} updateScore={updateScore} />\n      </div>\n      <Popup\n        correctLetters={correctLetters}\n        wrongLetters={wrongLetters}\n        selectedWord={selectedWord}\n        setPlayable={setPlayable}\n        playAgain={playAgain}\n        time={timeRemaining}\n        score={score}\n      />\n      <Notification showNotification={showNotification} />\n      <div className=\"timer\">Time Remaining: {timeRemaining}s</div>\n      <div className=\"score\">Score: {score}</div>\n      <div className=\"scoreboard\">\n        <h3>Scoreboard</h3>\n        {roundScores.map((roundScore, index) => (\n          <div key={index}>Round {index + 1}: {roundScore}</div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}