{"version":3,"sources":["store.js","reducers/userReducers.js","constants/userConstants.js","reducers/gameReducers.js","constants/gameConstants.js","components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","helpers/helpers.js","components/Popup.js","components/Notification.js","screens/HomeScreen.js","components/Message.js","components/Loader.js","firebase.js","screens/LoginScreen.js","App.js","index.js"],"names":["reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","userDetails","user","userUpdateProfile","success","userList","users","userDelete","userUpdate","gameCreate","game","gameGetAll","games","gameGetById","gameGetByUser","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","useDispatch","useSelector","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","key","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","checkWin","correct","wrong","word","time","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","useEffect","style","display","onClick","Notification","showNotification","wordList","english","spanish","french","german","HomeScreen","history","useState","playable","setCorrectLetters","setWrongLetters","setShowNotification","timeRemaining","setTimeRemaining","score","setScore","roundScores","setRoundScores","wordIndex","setWordIndex","guesses","setGuesses","bestScore","setBestScore","allScores","setAllScores","gameData","console","log","learningLanguage","setSelectedLanguage","randomIndex","Math","floor","random","setSelectedWord","selectedLanguage","push","handleKeydown","event","setter","keyCode","toLowerCase","setTimeout","currentLetters","prevScore","prevGuesses","selectedWordTrimmed","trim","letterTrimmed","countdown","setInterval","prevTime","clearInterval","window","addEventListener","removeEventListener","endGame","prevRoundScores","prevAllScores","maxScore","max","_","index","updateScore","prevIndex","Message","variant","children","Alert","defaultProps","Loader","Spinner","animation","role","margin","process","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","LoginScreen","getAuth","getFirestore","GoogleAuthProvider","getStorage","location","useHistory","knownLanguage","setKnownLanguage","setLearningLanguage","level","setLevel","errorMessage","setErrorMessage","redirect","search","languageOptions","value","label","Row","Col","md","textAlign","onChange","e","target","option","Button","setItem","stringify","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.332289db.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport {\n  gameCreateReducer,\n  gameGetAllReducer,\n  gameGetByIdReducer,\n  gameGetByUserReducer,\n} from './reducers/gameReducers';\n\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\n\nconst reducer = combineReducers({\n\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n\n  gameCreate: gameCreateReducer,\n  gameGetAll: gameGetAllReducer,\n  gameGetById: gameGetByIdReducer,\n  gameGetByUser: gameGetByUserReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","// gameReducers.js\n\nimport {\n    GAME_CREATE_REQUEST,\n    GAME_CREATE_SUCCESS,\n    GAME_CREATE_FAIL,\n    GAME_GET_ALL_REQUEST,\n    GAME_GET_ALL_SUCCESS,\n    GAME_GET_ALL_FAIL,\n    GAME_GET_BY_ID_REQUEST,\n    GAME_GET_BY_ID_SUCCESS,\n    GAME_GET_BY_ID_FAIL,\n    GAME_GET_BY_USER_REQUEST,\n    GAME_GET_BY_USER_SUCCESS,\n    GAME_GET_BY_USER_FAIL,\n  } from '../constants/gameConstants';\n  \n  export const gameCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n      case GAME_CREATE_REQUEST:\n        return { loading: true };\n      case GAME_CREATE_SUCCESS:\n        return { loading: false, game: action.payload };\n      case GAME_CREATE_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  \n  export const gameGetAllReducer = (state = { games: [] }, action) => {\n    switch (action.type) {\n      case GAME_GET_ALL_REQUEST:\n        return { loading: true, games: [] };\n      case GAME_GET_ALL_SUCCESS:\n        return { loading: false, games: action.payload };\n      case GAME_GET_ALL_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  \n  export const gameGetByIdReducer = (state = { game: {} }, action) => {\n    switch (action.type) {\n      case GAME_GET_BY_ID_REQUEST:\n        return { loading: true, ...state };\n      case GAME_GET_BY_ID_SUCCESS:\n        return { loading: false, game: action.payload };\n      case GAME_GET_BY_ID_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  \n  export const gameGetByUserReducer = (state = { games: [] }, action) => {\n    switch (action.type) {\n      case GAME_GET_BY_USER_REQUEST:\n        return { loading: true, games: [] };\n      case GAME_GET_BY_USER_SUCCESS:\n        return { loading: false, games: action.payload };\n      case GAME_GET_BY_USER_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  ","// gameConstants.js\n\nexport const GAME_CREATE_REQUEST = 'GAME_CREATE_REQUEST';\nexport const GAME_CREATE_SUCCESS = 'GAME_CREATE_SUCCESS';\nexport const GAME_CREATE_FAIL = 'GAME_CREATE_FAIL';\n\nexport const GAME_GET_ALL_REQUEST = 'GAME_GET_ALL_REQUEST';\nexport const GAME_GET_ALL_SUCCESS = 'GAME_GET_ALL_SUCCESS';\nexport const GAME_GET_ALL_FAIL = 'GAME_GET_ALL_FAIL';\n\nexport const GAME_GET_BY_ID_REQUEST = 'GAME_GET_BY_ID_REQUEST';\nexport const GAME_GET_BY_ID_SUCCESS = 'GAME_GET_BY_ID_SUCCESS';\nexport const GAME_GET_BY_ID_FAIL = 'GAME_GET_BY_ID_FAIL';\n\nexport const GAME_GET_BY_USER_REQUEST = 'GAME_GET_BY_USER_REQUEST';\nexport const GAME_GET_BY_USER_SUCCESS = 'GAME_GET_BY_USER_SUCCESS';\nexport const GAME_GET_BY_USER_FAIL = 'GAME_GET_BY_USER_FAIL';\nexport const GAME_LIST_MY_RESET = 'GAME_LIST_MY_RESET'","import React from 'react'\nimport { Button, Col, Row } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\nimport { useDispatch, useSelector } from 'react-redux';\n// rafce\nconst Header = () => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <>\n\n      <h1>Hangman</h1>\n      <p>Find the hidden word - Enter a letter</p>\n\n    \n    </>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Figure = ({ wrongLetters }) => {\n  const errors = wrongLetters.length\n\n  return (\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\n      {/* <!-- Rod --> */}\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\n\n      {/* <!-- Head --> */}\n      {errors > 0 &&\n        <circle cx=\"140\" cy=\"70\" r=\"20\" />\n      }\n      {/* <!-- Body --> */}\n      {errors > 1 &&\n        <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />\n      }\n      {/* <!-- Arms --> */}\n      {errors > 2 &&\n        <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />\n      }\n      {errors > 3 &&\n        <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />\n      }\n      {/* <!-- Legs --> */}\n      {errors > 4 &&\n        <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />\n      }\n      {errors > 5 &&\n        <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />\n      }\n    </svg>\n  )\n}\n\nexport default Figure\n","import React from 'react'\n\nconst WrongLetters = ({ wrongLetters }) => {\n\n  return (\n    <div className=\"wrong-letters-container\">\n      <div>\n        {wrongLetters.length > 0 && \n          <p>Wrong</p>\n        }\n        {wrongLetters\n          .map((letter, i) => <span key={i}>{letter}</span>)\n          .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\n      </div>\n    </div>\n  )\n}\n\nexport default WrongLetters\n","import React from 'react';\n\nconst Word = ({ selectedWord, correctLetters }) => {\n\n  return (\n    <div className=\"word\">\n      {selectedWord.split('').map((letter, i) => {\n        return (\n          <span className=\"letter\" key={i}>\n            {correctLetters.includes(letter) ? letter : ''}\n          </span>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Word","export function showNotification(setter) {\n  setter(true);\n  setTimeout(() => {\n    setter(false);\n  }, 2000);\n}\n\nexport function checkWin(correct, wrong, word,time) {\n  let status = 'win';\n  // Check for win\n  word.split('').forEach(letter => {\n    if(!correct.includes(letter)){\n      status = '';\n    }\n  });\n  \n  // Check for lose\n  if(wrong.length === 6) status = 'lose';\n\n  if(time === 0) status = 'timeup';\n\n  return status\n}","import React, { useEffect } from 'react';\nimport { checkWin } from '../helpers/helpers';\nimport DemoLine from './GraphComponent';\n\nconst Popup = ({ correctLetters, wrongLetters, selectedWord, setPlayable, playAgain,time}) => {\n  let finalMessage = '';\n  let finalMessageRevealWord = '';\n\n  if (checkWin(correctLetters, wrongLetters, selectedWord,time) === 'win') {\n    finalMessage = 'Congratulations! You won! 😃';\n  }\n  else if (checkWin(correctLetters, wrongLetters, selectedWord,time) === 'lose') {\n    finalMessage = 'Unfortunately, you lost. 😕';\n    finalMessageRevealWord = `...the word was: .....`;\n  }\n\n  else if (checkWin(correctLetters, wrongLetters, selectedWord,time) === 'timeup') {\n    finalMessage = 'Unfortunately, Time is Up. 😕';\n    finalMessageRevealWord = `...the word was: ...`;\n  }\n\n  useEffect(() => {\n    if (finalMessage !== '') {\n      setPlayable(false);\n    }\n  }, [finalMessage, setPlayable]);\n\n  return (\n    <div className=\"popup-container\" style={finalMessage !== '' ? { display: 'flex' } : {}}>\n      <div className=\"popup\">\n        <h2>{finalMessage}</h2>\n        <h3>{finalMessageRevealWord}</h3>\n\n       \n       \n         {finalMessage == 'Congratulations! You won! 😃' ? (\n          <button onClick={playAgain}>Next Round</button>\n        ): <button onClick={playAgain}>Play Again</button>}\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import React from 'react'\n\nconst Notification = ({ showNotification }) => {\n  return (\n    <div className={`notification-container ${showNotification ? 'show' : ''}`}>\n      <p>You have already entered this letter</p>\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Figure from '../components/Figure';\nimport WrongLetters from '../components/WrongLetters';\nimport Word from '../components/Word';\nimport Popup from '../components/Popup';\nimport Notification from '../components/Notification';\nimport { showNotification as show, checkWin } from '../helpers/helpers';\n\nimport '../App.css';\nimport { useSelector } from 'react-redux';\nimport DemoLine from '../components/GraphComponent';\n\nconst wordList = {\n  english: ['application', 'programming', 'interface', 'wizard', 'computer', 'technology', 'internet', 'software'],\n  spanish: ['aplicación', 'programación', 'interfaz', 'mago', 'computadora', 'tecnología', 'internet', 'software'],\n  french: ['application', 'programmation', 'interface', 'sorcier', 'ordinateur', 'technologie', 'internet', 'logiciel'],\n  german: ['anwendung', 'programmierung', 'oberfläche', 'zauberer', 'computer', 'technologie', 'internet', 'software'],\n};\n\n\nconst gameDuration = 30; // Duration of the game in seconds\nconst maxGuesses = 5; // Maximum number of wrong guesses for each word\n\nfunction HomeScreen({ history }) {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState(gameDuration);\n  const [score, setScore] = useState(0);\n  const [roundScores, setRoundScores] = useState([]);\n\n  const [wordIndex, setWordIndex] = useState(0);\n  const [guesses, setGuesses] = useState(maxGuesses);\n  const [bestScore, setBestScore] = useState(0);\n  const [allScores, setAllScores] = useState([]);\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    const gameData = JSON.parse(localStorage.getItem('gameData'));\n    if (!gameData) {\n      history.push('/login');\n    }\n    else {\n      console.log(\"learning is \",gameData.learningLanguage)\n      setSelectedLanguage(gameData.learningLanguage);\n      const randomIndex = Math.floor(Math.random() * wordList[gameData.learningLanguage].length);\n      setSelectedWord(wordList[selectedLanguage][randomIndex]);\n    }\n  }, [history]);\n\n  useEffect(() => {\n    const handleKeydown = (event) => {\n      const { key, keyCode } = event;\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n        if (correctLetters.includes(letter) || wrongLetters.includes(letter)) {\n          show(setShowNotification);\n          return;\n        }\n        // console.log(\"letter is \",letter)\n        \n        if (wordList[selectedLanguage][wordIndex].includes(letter)) {\n          console.log(\"w \",wordList[selectedLanguage][wordIndex])\n          console.log(correctLetters)\n          setCorrectLetters((currentLetters) => [...currentLetters, letter]);\n          setScore((prevScore) => prevScore + 10);\n        } else {\n          setWrongLetters((currentLetters) => [...currentLetters, letter]);\n          setGuesses((prevGuesses) => prevGuesses - 1);\n        }\n\n\n        const selectedWordTrimmed = selectedWord.trim().toLowerCase();\nconst letterTrimmed = letter.trim().toLowerCase();\n\n        if (selectedWordTrimmed.includes(letterTrimmed)) {\n          console.log(\"Selected word:\", selectedWordTrimmed);\n          console.log(\"Correct letters:\", correctLetters);\n          setCorrectLetters((currentLetters) => [...currentLetters, letter]);\n          setScore((prevScore) => prevScore + 10);\n        } else {\n          setWrongLetters((currentLetters) => [...currentLetters, letter]);\n          setGuesses((prevGuesses) => prevGuesses - 1);\n        }\n\n      }\n    };\n\n    const countdown = setInterval(() => {\n      if (timeRemaining > 0 && playable) {\n        setTimeRemaining((prevTime) => prevTime - 1);\n      } else {\n        setPlayable(false);\n        clearInterval(countdown);\n      }\n    }, 1000);\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      clearInterval(countdown);\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [correctLetters, wrongLetters, playable, timeRemaining, wordIndex]);\n\n  useEffect(() => {\n    if (timeRemaining === 0) {\n      setPlayable(false);\n      endGame();\n    }\n  }, [timeRemaining]);\n\n  const handleLanguageChange = (event) => {\n    const language = event.target.value;\n    setSelectedLanguage(language);\n    setSelectedWord(wordList[language][0]);\n    setWordIndex(0);\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    setScore(0);\n    setGuesses(maxGuesses);\n  };\n  const [selectedLanguage, setSelectedLanguage] = useState('english');\n\n  const randomIndex = Math.floor(Math.random() * wordList[selectedLanguage].length);\n\n  const updateScore = () => {\n    setScore((prevScore) => prevScore + 10);\n    if (wordIndex + 1 === wordList[selectedLanguage].length) {\n      endGame();\n    } else {\n      setWordIndex((prevIndex) => prevIndex + 1);\n      setSelectedWord(wordList[selectedLanguage][wordIndex + 1]);\n      setCorrectLetters([]);\n      setWrongLetters([]);\n      setGuesses(maxGuesses);\n    }\n  };\n\n  const endGame = () => {\n    setPlayable(false);\n    setRoundScores((prevRoundScores) => [...prevRoundScores, score]);\n    setAllScores((prevAllScores) => [...prevAllScores, score]);\n    const maxScore = Math.max(...roundScores, score);\n    setBestScore(maxScore);\n  };\n\n  const playAgain = () => {\n    setPlayable(true);\n    setTimeRemaining(gameDuration);\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    setGuesses(maxGuesses);\n    setScore(0);\n    setRoundScores([]);\n    setWordIndex(0);\n    setSelectedWord(wordList[selectedLanguage][randomIndex]);\n  };\n\n  const exitGame = () => {\n    history.push('/login');\n  };\n\n\n  const [selectedWord, setSelectedWord] = useState(wordList[selectedLanguage][randomIndex]);\n  \n  console.log(selectedWord)\n  const chartData = {\n    labels: roundScores.map((_, index) => `Round ${index + 1}`),\n    datasets: [\n      {\n        label: 'Score',\n        data: roundScores,\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      },\n    ],\n  };\n\n  const chartOptions = {\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: Math.max(...allScores, bestScore) + 10,\n      },\n    },\n  };\n\n\n  useEffect(() => {\n    // Check if the current score is greater than the previous best score\n    if (score > bestScore) {\n      setBestScore(score);\n    }\n  }, [score, bestScore]);\n\n\n  const renderRoundScores = () => {\n    return roundScores.map((score, index) => (\n      <div key={index}>Round {index + 1}: {score}</div>\n    ));\n  };\n\n  return (\n    <>\n      <Header />\n\n      <div className=\"round-scores\">\n        {renderRoundScores()}\n      </div>\n      <Notification showNotification={showNotification} />\n      <div className=\"timer\">Time Remaining: {timeRemaining}s</div>\n      <div className=\"score\">Score: {score}</div>\n      <div className=\"score\">Best Score: {bestScore}</div>\n      <div className=\"guesses\">Guesses Remaining: {guesses}</div>\n      {/* <DemoLine /> */}\n     \n      <div className=\"buttons\">\n        {playable ? (\n          <button className=\"btn btn-secondary\" onClick={() => setPlayable(false)}>\n            Pause\n          </button>\n        ) : (\n          <button className=\"btn btn-primary\" onClick={() => setPlayable(true)}>\n            Resume\n          </button>\n        )}\n        <button className=\"btn btn-primary\" onClick={playAgain}>\n          Play Again\n        </button>\n        <button className=\"btn btn-danger\" onClick={exitGame}>\n          Exit Game\n        </button>\n      </div>\n      \n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} updateScore={updateScore} />\n      </div>\n     \n      <Popup\n        correctLetters={correctLetters}\n        wrongLetters={wrongLetters}\n        selectedWord={selectedWord}\n        setPlayable={setPlayable}\n        playAgain={playAgain}\n        time={timeRemaining}\n        \n      />\n    </>\n  );\n}\n\nexport default HomeScreen;\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\nimport {\n  GoogleAuthProvider,\n  getAuth,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\n// import { useDispatch } from \"react-redux\";\n// import { login } from \"./actions/userActions\";\nconsole.log(process.env)\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n  measurementId: process.env.REACT_APP_measurementId,  \n};\n\n\n  \nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst googleProvider = new GoogleAuthProvider();\n\nconst signInWithGoogle = async () => {\n\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    console.log(res.user);\n    const q = query(collection(db, \"users\"), where(\"email\", \"==\", user.email));\n    const docs = await getDocs(q);\n    if (docs.docs.length > 0) {\n      // await addDoc(collection(db, \"users\"), {\n      //   uid: user.uid,\n      //   name: user.displayName,\n      //   authProvider: \"google\",\n      //   email: user.email,\n      // });\n      return({ firstName: user.displayName, email: user.email })\n\n    }\n    else{\n      return({error:\"User doesn't exists\"})\n    }\n    \n  } catch (err) {\n    console.error(err);\n    if (err instanceof Error) {\n      // If err is an instance of Error, handle the error\n      // alert(err.message);\n      return { error: err.message };\n    } else {\n      // Handle the case when err is of type unknown\n      return { error: 'An unknown error occurred.' };\n    }\n  }\n};\n\nconst registerWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n   \n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n    if (docs.docs.length === 0) {\n    //   await addDoc(collection(db, \"users\"), {\n    //     uid: user.uid,\n    //     name: user.displayName,\n    //     authProvider: \"google\",\n    //     email: user.email,\n    //   });\n      // const dispatch = useDispatch()\n      // dispatch(login({firstName:user.displayName,secondName:user.displayName,email:user.email}))\n      return({ user })\n    }\n    else{\n      return({ user })\n    }\n  } catch (err) {\n    console.error(err);\n    \n    if (typeof err === 'object' && err !== null && 'message' in err && typeof err.message === 'string') {\n      alert(err.message);\n      return { error: err.message };\n    } else {\n      return { error: 'An unknown error occurred.' };\n    }\n  }\n  \n};\n\nconst logInWithEmailAndPassword = async (email) => {\n  try {\n    await signInWithEmailAndPassword(auth, email);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (email) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email);\n    const user = res.user;\n    \n\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\n\nconst logout = () => {\n  signOut(auth);\n};\n\nconst storage = getStorage(app);\n\n\nexport {\n  auth,\n  db,\n  app,\n  signInWithGoogle,\n  registerWithGoogle,\n  logInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  logout,\n  storage\n};","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login, register } from '../actions/userActions'\nimport { registerWithGoogle, signInWithGoogle,  } from \"../firebase\";\nimport { USER_LOGIN_FAIL } from '../constants/userConstants'\nimport { useHistory } from 'react-router-dom';\n\nconst LoginScreen = ({ location }) => {\n  const history = useHistory();\n  const [email, setEmail] = useState('')\n\n\n  const [knownLanguage, setKnownLanguage] = useState('');\n  const [learningLanguage, setLearningLanguage] = useState('');\n  const [level, setLevel] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleKnownLanguageChange = (e) => {\n    setKnownLanguage(e.target.value);\n  };\n\n  const handleLearningLanguageChange = (e) => {\n    setLearningLanguage(e.target.value);\n  };\n\n  const handleLevelChange = (e) => {\n    setLevel(e.target.value);\n  };\n\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email))\n  }\n\n\n  const authenticate = async (e) => {\n    e.preventDefault();\n    const signupgoogledetails = await registerWithGoogle();\n   \n    if (signupgoogledetails) {\n      console.log(\"sadasd\",signupgoogledetails);\n\n      const x_email = signupgoogledetails.user?.email\n\n      console.log(x_email)\n\n      if (x_email) {\n        dispatch(register({email:x_email}))\n      }\n    }\n \n  };\n\n  const loginWithGoogle = async ()=>{\n    const details = await signInWithGoogle()\n    console.log(\"details are \",details)\n    const {email,error}= details\n    if (email) {\n      dispatch(login({ email}));\n    }\n    if(error){\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload:\n          error\n            ? error\n            : error\n      })\n    }  }\n\n    const handleStartGame = () => {\n      if (!knownLanguage || !learningLanguage || !level) {\n        setErrorMessage('Please fill in all the fields');\n        return;\n      }\n    \n      const gameData = {\n        knownLanguage,\n        learningLanguage,\n        level,\n      };\n    \n      localStorage.setItem('gameData', JSON.stringify(gameData));\n      setErrorMessage('');\n    history.push('/'); // Navigate to '/' route\n    };\n  \n    // Language options\n    const languageOptions = [\n      { value: 'english', label: 'English' },\n      { value: 'spanish', label: 'Spanish' },\n      { value: 'french', label: 'French' },\n      { value: 'german', label: 'German' },\n      // Add more languages as needed\n    ];\n\n    \n\n  return (\n    <>\n      <Row className='w-100'>\n        \n\n        <Col md={12}>\n        <div style={{textAlign:\"center\"}} >\n      <h1 >HANGMAN GAME</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n       {loading && <Loader />}\n\n       {errorMessage && <Message variant='danger'>{errorMessage}</Message>}\n\n\n      <div>\n     \n      <label>\n        Known Language:\n        <select className='form-control w-100' value={knownLanguage} onChange={handleKnownLanguageChange}>\n          <option value=\"\">Select Known Language</option>\n          {languageOptions.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </label>\n      <br />\n      <label>\n        Learning Language:\n        <select className='form-control w-100' value={learningLanguage} onChange={handleLearningLanguageChange}>\n          <option value=\"\">Select Learning Language</option>\n          {languageOptions.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </label>\n      <br />\n      <label>\n        Level:\n        <select className='form-control w-100' value={level} onChange={handleLevelChange}>\n          <option value=\"\">Select Level</option>\n          <option value=\"Beginner\">Beginner</option>\n          <option value=\"Intermediate\">Intermediate</option>\n          <option value=\"Advanced\">Advanced</option>\n        </select>\n      </label>\n      <br />\n      <Button onClick={handleStartGame}>Start</Button>\n    </div>\n\n      \n      </div>\n          \n        </Col>\n      </Row>\n     \n    </>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\n\nfunction App() {\n\n\n  return (\n    <Router>\n       <Route path='/login' component={LoginScreen} />\n      \n<Route path='/' component={HomeScreen} exact />    \n</Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App';\nimport './bootstrap.min.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}